// ATUOMATIC PUMP FOR TANK LEVEL CONTROL

// include the library code:
#include <LiquidCrystal.h>
// initialize the library by associating any needed LCD interface pin
// with the arduino pin number it is connected to

const int rs = 12, en = 11, d4 = 6, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

const int trigPin_OH = 9;
const int echoPin_OH = 10;

const int trigPin_UG = 8;
const int echoPin_UG = 13;

const int pump = 7;
  
long duration_OH;
long duration_UG;
  
int sensor_OH;
int sensor_UG;

int level_OH;
int level_UG;

void setup() {
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  pinMode(trigPin_OH, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin_OH, INPUT); // Sets the echoPin as an Input
  pinMode(trigPin_UG, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin_UG, INPUT); // Sets the echoPin as an Input
  pinMode(pump, OUTPUT); // Sets the trigPin as an Output
  Serial.begin(9600); // Starts the serial communication
}
  void loop() {
   // Clears the trigPin
  digitalWrite(trigPin_OH, LOW);
  delayMicroseconds(2);
  
  // Sets the trigPin on HIGH state for 10 microseconds
  digitalWrite(trigPin_OH, HIGH);
  
  delayMicroseconds(10); 
  digitalWrite(trigPin_OH, LOW);
 
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration_OH = pulseIn(echoPin_OH, HIGH);
  
  // Calculating the level  
  sensor_OH = duration_OH*0.034/2;
  /********************************************************************************/
  // Clears the trigPin
  digitalWrite(trigPin_UG, LOW);

  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 microseconds
  digitalWrite(trigPin_UG, HIGH);
  
  delayMicroseconds(10);
  digitalWrite(trigPin_UG, LOW);
  
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration_UG = pulseIn(echoPin_UG, HIGH);
  
  // Calculating the level
  sensor_UG = duration_UG*0.034/2;
 /********************************************************************************/
 
  level_OH = 24-sensor_OH;
  level_UG = 25-sensor_UG;
  delay(100);
  
  if( level_OH <= 5 && level_UG > 5 )
  {
    delay(100);
    digitalWrite( pump, HIGH );
  }
  
  else if( level_OH >= 20 || level_UG < 5 )
  {
    delay(100);
    digitalWrite( pump, LOW );
  }
    
  Serial.print("\nLevel_OH: ");
  Serial.print(level_OH);
  Serial.print(" cm ");
  Serial.print("\nLevel_UG: ");
  Serial.print(level_UG);
  Serial.print(" cm ");
  
  int pumpStatus = digitalRead(pump);
  
  if ( pumpStatus == HIGH )
    Serial.print("\nPUMP: ON");
  else
    Serial.print("\nPUMP: OFF");
  Serial.println();
  
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(" Level_OH: ");
  lcd.print( level_OH );
  lcd.print(" cm ");
  
  if ( pumpStatus == HIGH )
  {
    lcd.setCursor(0,1);
    lcd.print(" PUMP: ON ");
  }
  
  else
  {
    lcd.setCursor(0,1);
    lcd.print(" PUMP: OFF ");
  }
  
  delay(1500);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(" Level_UG: ");
  lcd.print( level_UG );
  lcd.print(" cm ");
  
  if ( pumpStatus == HIGH )
  {
    lcd.setCursor(0,1);
    lcd.print(" PUMP: ON ");
  }
  else
  {
    lcd.setCursor(0,1);
    lcd.print(" PUMP: OFF ");
  }
  
  delay(1500);
}  